/*
    Usage:  <upsy-downsy delta="up" value="216"></hydro-meter>
    Value:  How much of the meter is filled
    Max:    The meter's total capacity (its value when filled to 100%)
    Size:   Optional (defaults to 100)
*/
upsy-downsy {
    display: block;
    background: white;
    position:relative;
    overflow: hidden;
    border:1px solid black;
    --size:var(--size, 100);
    border-radius: 8px;

    &, &::before, &::after {
        max-height: calc(var(--size) * 1px);
        min-height: calc(var(--size) * 1px);
        height: calc(var(--size) * 1px);
        width: calc(var(--size) * 1px);
        max-width: calc(var(--size) * 1px);
        min-width: calc(var(--size) * 1px);
        overflow: hidden;
        appearance: none;    
        box-sizing: border-box;
        outline: none;
        user-select:none;
        pointer-events:none;
        margin: 0;
    }

    &::before {
        content: "◭up";
        width: calc(var(--size) * 0.66px);
        min-width: calc(var(--size) * 0.66px);
        display: block;
        position: absolute;
        color: green;
        font: calc(var(--size) * 0.35px) Teko;
        text-align: center;
    }

    &::after {
        content: var(--value) '%';
        display: inline-block;
        position: absolute;
        background-color: green;
        mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 226 188'%3E%3Cpath d='M210 179H9c-4 0-8-4-8-8v-25L218 1v170c0 4-4 8-8 8z'/%3E%3C/svg%3E");
        mask-repeat: no-repeat;
        mask-size: calc(var(--size) * 1.15px) calc(var(--size) * 1.15px);
        mask-position:calc(100% + (var(--size) * 0.1px)) calc(100% + (var(--size) * 0.15px));
        vertical-align: bottom;
        text-align: right;
        font-size: calc(var(--size) * 0.4px);
        font: calc(var(--size) * 0.35px) Teko;
        bottom: 0;
        padding:calc(var(--size) * 0.55px) calc(var(--size) * 0.035px) 0 0 !important;
        color: white;
        overflow: hidden;
    }

    &[delta="down"]{
        &::before {
            content:'⧩down';
            color: red;
            font: calc(var(--size) * 0.30px) Teko;
            letter-spacing: calc(var(--size) * -0.01px);
        }
        &::after {
            content: '(' var(--value) '%)';
            background-color: red;
            font: calc(var(--size) * 0.30px) Teko;
        }
    }
}

